#+Title: SKELETONGL CHANGELOG

Also available at [[https://xenobyte.xyz/projects/?nav=skeletongl#changelog][XENOBYTE.XYZ]]

* ver 2.0 <2020-11-26 Tue 17:33>
  - Added a GPU accelerated circles renderer and circle batch renderer
  - Added CIRCLE_SHADER & CIRCLE_BATCH_SHADER to their shaders list
  - Updated the uniforms parsed to the shaders of all the renderers
  - Updated all default shaders
  - Added a convenience overload to renderBMPFont()
  - Replaced all string references to internal OpenGL and SkeletonGL objects with const references
  - SGL_Renderer & SGL_PostProcessor purged of all prototype code, got some overall cleanup
  - Added blending options to all render objects including circles
  - All internal OpenGL value limits (pixel size, line width, max batch render size, etc) are now defined in SGL_DataStructures.hpp
  - Default assets file paths and loading were updated
  - Fixed a bug where default assets weren't being correctly loaded when trying to render with invalid / uninitialized values
  - Passing a shader offer type BATCH render an individual entity or vice-versa (i.e. passing an SGL::DEFAULT_SPRITE_BATCH_SHADER to render a single sprite) no longer triggers an exception, it is possible to write custom hybrid shaders for both renderers 

* ver 1.92 <2020-11-05 Thu 18:25>
  - Rebranded comments NEOHEX.XYZ -> XENOBYTE.XYZ
  - Deleted some old, sneaky trash files

* ver 1.9 <2020-09-03 Thu 14:50>
  - Polished the instance renderers, they should work much faster now
  - Added a limit of 10,000 items per call, see SGL_DataStructures.hpp to change it
  - Added blending options to the SGL_Pixel, SGL_Line and their respective batch renderers
  - Added new blending functions
  - All instance renderers are now compatible with their base shaders (ie, sprite shaders work with sprite batching)
  - The getTextureMemoryGPU function now includes the instance renderers pre-allocated memory
  - Added a makefile / compile time macro to add or remove error checking after render calls
  - SGL_Pixel can now specify pixel size
  - SGL_Line can now specify line width
  - Optimized away many unnecessary calls to OpenGL VBOs

* ver 1.8 <2020-08-29 Sat 18:24>
  - Reworked the input systems, the changes are minor but were necessary, make sure to update your input handling!

* ver 1.7 [ 12/08/2020 ]
  - Added a width specifier to the SGL_Line and its respective batch renderer
  - Will be testing OpenGL capabilities with glEnable/glDisable, the SGL_OpenGLManager has its own enable / disable
    that will filter invalid settings

* ver 1.6 [ 10/05/2020 ] 
  - Uninitialized SGL_Sprites now render the internal default texture instead of throwing an error
  - Added a constant for the default texture name
  - Added support for both SGL blending modes and raw, OpenGL enum source and destination factors

* ver 1.5 [ 05/05/2020 ]
  - Fixed a mouse input bug were the buttons weren't being correctly reset
  - Added support for scrolling wheels and middle buttons

* ver 1.4 [ 02/05/2020 ]
  - Updated GLM to v0.9.9.0
  - Updated stb_image to ver 2.5
  - Added a filter to the stdout calls by SGL_Log
  - Updated the makefiles
  - Manually initialized all internal glm::vector & glm::mat
  - Included a file with the dependencies and their licenes in deps/ 

* ver 1.3 [ 25/04/2020 ]
  - Remove many profiling crap, the internal SGL_Window delta time measures the time between renders ONLY
  - Removed useless helper functions
  - While working on Risk Vector I added a proper fixed time-step updating to the physics

* ver 1.23 [ 19/04/2020 ]
  - Added a bitmap font renderer to the SGL_Renderer class
  - Fixed some minor input bugs 

* ver 1.22 [ 10/04/2020 ]
  - Added "pressed" and "released" status checkings to the mouse buttons
  - Fixed some comments
  - Fixed a bug where the windows wasn't respecting the .ini file fullscreen request

* ver 1.21 [ 20/03/2020 ]
  - Added dynamic VSYNC toggling
  - Added an alternative orthographic projection with the Y axis flipped 

* ver 1.2 [ 0/02/2020 ]
  - Deleted test files (sgl/src/), will be making a separate git for testing.
  - Fixed an input bug were unhandled signals where causing spontaneous SDL_QUIT events.

* ver 1.1 [ 20/01/2020 ]
  - Added instance rendering (sprite batching) to the sprite, pixel and line renderers
  - Removed a few, minor bugs.

* ver 1.0 [ 31/11/2019 ]
  - Moved the project to a new git
  - Removed a few useless files
  - Since SkeletonGL already has a stable release, the git has been reset 
